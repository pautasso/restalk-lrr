var express = require('express');
var http = require('http');
var bodyParser = require('body-parser');
const logger = require('morgan');

var app = express();

app.use(logger('dev'));
app.use(bodyParser.json());

app.listen(3001);

const ppt_url = '/postput';
const ppt_link = '/resource';

const ppt_router = express.Router();


//TODO implement garbage collection strategy to clean up the result cache
var token = 0;

var tokens = {};

function getToken() {
	var newtoken = token++;

	tokens[newtoken] = { state: 'new'};

	return newtoken;
}

function seenToken(t) {
	if (tokens[t]) {
		if (tokens[t].state == 'new') {
			tokens[t].state = 'seen';
			return false;
		}
		return true;
	}
	return;
}


function setResponse(t,r) {
	//avoid crashing if the token has not been preset
	if (!tokens[t]){
		tokens[t] = {};
	}
	tokens[t].res = r;
}

function getResponse(t) {
	return tokens[t].res;
}



ppt_router.get('/debug', function(req, res) {

	res.send(tokens);

});


ppt_router.post(ppt_link, function(req, res) {

	//assert empty body?

	res.status(201);
	res.set('Location', ppt_url + ppt_link+'/'+getToken());

    res.send();
});

ppt_router.put(ppt_link+'/:token', function(req, res) {
	var token = req.params.token;

	//does not check if the token has been generated by us

	//process request body
	setResponse(token, req.body);

	res.send(req.body);
});

ppt_router.get(ppt_link+'/:token', function(req, res) {
	var token = req.params.token;

	res.send(getResponse(token, req.body));
});


app.use(ppt_url, ppt_router);

